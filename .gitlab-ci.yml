image: cyfronet/ruby-2.4.1-node-phantomjs-2.1

services:
  - postgres

variables:
  POSTGRES_DB: vapor_test
  POSTGRES_USER: vapor
  POSTGRES_PASSWORD: ""

cache:
  paths:
  - vendor/

stages:
  - test
  - deploy

test:
  stage: test
  script:
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
  - apt-get update -qy
  - apt-get install -y google-chrome-stable
  - google-chrome --version
  - ruby -v
  - which ruby
  - gem install bundler --no-ri --no-rdoc
  - bundle install --path vendor --jobs $(nproc)  "${FLAGS[@]}"
  - cp config/database.yml.gitlab-ci config/database.yml
  - bundle exec rake db:create RAILS_ENV=test
  - bundle exec rake db:migrate RAILS_ENV=test
  - bundle exec rspec

integration:
  stage: test
  script:
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
  - apt-get update -qy
  - apt-get install -y google-chrome-stable
  - google-chrome --version
  - ruby -v
  - which ruby
  - gem install bundler --no-ri --no-rdoc
  - bundle install --path vendor --jobs $(nproc)  "${FLAGS[@]}"
  - cp config/database.yml.gitlab-ci config/database.yml
  - bundle exec rake db:create RAILS_ENV=test
  - bundle exec rake db:migrate RAILS_ENV=test
  - echo -e $PROD_DEV_PEM > config/jwt/dev.pem
  - bundle exec rspec --tag files --tag gitlab

rubocop:
  stage: test
  script:
    - ruby -v
    - gem install bundler --no-ri --no-rdoc
    - bundle install --path vendor --jobs $(nproc)  "${FLAGS[@]}"
    - bundle exec rubocop

brakeman:
  stage: test
  script:
    - ruby -v
    - which ruby
    - gem install bundler --no-ri --no-rdoc
    - bundle install --path vendor --jobs $(nproc)  "${FLAGS[@]}"
    - bundle exec brakeman -z

deploy_development:
  stage: deploy
  script:
  - mkdir /root/.ssh
  - echo $DEV_HOST_KEY > ~/.ssh/known_hosts
  - echo -e $DEV_KEY > ~/.ssh/id_rsa
  - chmod 400 ~/.ssh/id_rsa
  - git push $DEV_GIT_REPO HEAD:master
  only:
  - master
  environment:
    name: development
    url: https://valve-dev.cyfronet.pl

deploy_production:
  stage: deploy
  script:
  - mkdir /root/.ssh
  - echo $PROD_HOST_KEY > ~/.ssh/known_hosts
  - echo -e $PROD_KEY > ~/.ssh/id_rsa
  - chmod 400 ~/.ssh/id_rsa
  - git push $PROD_GIT_REPO $CI_COMMIT_TAG
  only:
  - tags
  environment:
    name: production
    url: https://valve.cyfronet.pl

deploy_production_manual:
  stage: deploy
  script:
  - mkdir /root/.ssh
  - echo $PROD_HOST_KEY > ~/.ssh/known_hosts
  - echo -e $PROD_KEY > ~/.ssh/id_rsa
  - chmod 400 ~/.ssh/id_rsa
  - git push $PROD_GIT_REPO HEAD:master
  when: manual
  only:
  - master
  environment:
    name: production
    url: https://valve.cyfronet.pl

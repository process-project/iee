-# NOTE: Used to embed file browser component multiple times in a single web page
-# requires the following local settings:
-# - target_path - WebDAV directory the browser should list as the root element
-# - element_id - id of the element in which the browser will be embedded (the element will be
-#                created automatically)
- content_for :embed_file_browser do
  :plain
    eurvalve.filestore.Embed.embedFileBrowser({
      resourceUrlBase: '#{File.join(Webdav::FileStore.url, '/')}',
      elementId: '#{element_id}',
      userLogin: '#{current_user.email}',
      userToken: '#{current_user.token}',
      userGroups: #{sanitize(current_user.all_group_names)},
      webDavBaseUrl: '#{File.join(Webdav::FileStore.url, Webdav::FileStore.path, target_path)}',
      webDavBaseHref: '#{File.join(Webdav::FileStore.path, target_path)}',
      policiesApiUrl: '#{File.join(Webdav::FileStore.url, Webdav::FileStore.proxy_path)}',
      disableUpload: #{!!local_assigns[:disable_upload]},
      disableFolderCreation: #{!!local_assigns[:disable_mkdir]},
      onError: function(message) {
        toastr.error(message);
      },
      onFileUploaded: function(path) {
        console.log("uploaded %o", path);
        $('div[data-computation="true"]').each(function() {
          console.log("uploaded %o", path);
          refreshComputation(this);
        })
      },
      additionalJsResources: ['#{javascript_path 'application'}'],
      additionalCssResources: ['#{stylesheet_path 'application'}'],
      additionalCssOverrides: ['body { background: #ffffff; }']
    });

%div{:id => "#{element_id}"}
